Absolutely! Here's a comprehensive guide to **Python list methods** ‚Äî what they do, how to use them, and quick examples for each.

---

## üî¢ Python List Methods (Built-in)

### ‚úÖ 1. `append(x)`

Adds an item `x` to the **end** of the list.

```python
cards = ['A', 'K']
cards.append('Q')
# ['A', 'K', 'Q']
```

---

### ‚úÖ 2. `extend(iterable)`

Adds all elements from another iterable (e.g. list, tuple) to the end.

```python
cards = ['A', 'K']
cards.extend(['Q', 'J'])
# ['A', 'K', 'Q', 'J']
```

---

### ‚úÖ 3. `insert(i, x)`

Inserts item `x` at position `i`.

```python
cards = ['A', 'K']
cards.insert(1, 'Q')
# ['A', 'Q', 'K']
```

---

### ‚úÖ 4. `remove(x)`

Removes the **first** occurrence of `x`. Raises `ValueError` if not found.

```python
cards = ['A', 'K', 'Q']
cards.remove('K')
# ['A', 'Q']
```

---

### ‚úÖ 5. `pop([i])`

Removes and **returns** item at index `i`. If `i` is not given, removes **last item**.

```python
cards = ['A', 'K', 'Q']
cards.pop()     # returns 'Q'
# ['A', 'K']

cards.pop(0)    # returns 'A'
# ['K']
```

---

### ‚úÖ 6. `clear()`

Removes **all items** from the list.

```python
cards = ['A', 'K', 'Q']
cards.clear()
# []
```

---

### ‚úÖ 7. `index(x[, start[, end]])`

Returns the **index** of the first occurrence of `x`. Raises `ValueError` if not found.

```python
cards = ['A', 'K', 'Q', 'A']
cards.index('A')      # 0
cards.index('A', 1)   # 3
```

---

### ‚úÖ 8. `count(x)`

Counts how many times `x` appears.

```python
cards = ['A', 'K', 'A', 'Q']
cards.count('A')  # 2
```

---

### ‚úÖ 9. `sort(key=None, reverse=False)`

Sorts the list **in-place**.

```python
numbers = [3, 1, 2]
numbers.sort()
# [1, 2, 3]

numbers.sort(reverse=True)
# [3, 2, 1]
```

> ‚ö†Ô∏è Strings will sort alphabetically by default:

```python
cards = ['K', 'A', 'Q']
cards.sort()
# ['A', 'K', 'Q']
```

---

### ‚úÖ 10. `reverse()`

Reverses the list **in-place**.

```python
cards = ['A', 'K', 'Q']
cards.reverse()
# ['Q', 'K', 'A']
```

---

### ‚úÖ 11. `copy()`

Returns a **shallow copy** of the list (not just a reference).

```python
cards = ['A', 'K']
new_cards = cards.copy()
# new_cards = ['A', 'K']
```

---

## üß† Quick Recap Table:

| Method         | What it does                       |
| -------------- | ---------------------------------- |
| `append(x)`    | Add `x` to end                     |
| `extend(...)`  | Add all elements from another list |
| `insert(i, x)` | Insert `x` at index `i`            |
| `remove(x)`    | Remove first `x`                   |
| `pop([i])`     | Remove and return item at `i`      |
| `clear()`      | Remove all items                   |
| `index(x)`     | Get index of `x`                   |
| `count(x)`     | Count occurrences of `x`           |
| `sort()`       | Sort list in-place                 |
| `reverse()`    | Reverse list in-place              |
| `copy()`       | Make a copy of the list            |

---


